---
title: "R Coding Exercise"
---

Placeholder file for the future R coding exercise.


```{r, message=FALSE, warning=FALSE}
library("dplyr")
library("tidyverse")
library("ggplot2")
library("dslabs")
library("renv")
```

```{r}
#look at help file for gapminder data
help(gapminder)
#get an overview of data structure
str(gapminder)
```

```{r}
#get a summary of data
summary(gapminder)
```

```{r}
#determine the type of object gapminder is
class(gapminder)
```

```{r}
africadata = filter(gapminder, continent == 'Africa')
head(africadata)
```

# To get overview of africadata

```{r}
str(africadata)
```

# Summary of africadata

```{r}
summary(africadata)
```

# Infant survival rate

```{r}
infant_survival_rate = africadata %>%
  select(infant_mortality, life_expectancy)
head(infant_survival_rate)
```

# Structure of infant survival

```{r}
str(infant_survival_rate)
```

# summary of infant survival

```{r}
summary(infant_survival_rate)
```

# Infant mortality

```{r}
african_mortality = africadata %>%
  select(population, life_expectancy)
head(african_mortality)
```

# African mortality structure

```{r}
str(african_mortality)
```

# African mortality summary

```{r}
summary(african_mortality)
```

```{r}
regression = lm(infant_survival_rate$life_expectancy ~ infant_survival_rate$infant_mortality)
rsq <- function(x, y) summary(lm(infant_survival_rate$life_expectancy ~ infant_survival_rate$infant_mortality))$r.squared
r_square = round(rsq(obs, mod), 3)

coeff = round(summary(regression)$coefficients[2],3)
y_int = round(summary(regression)$coefficients[1],3)
plot(
  infant_survival_rate$infant_mortality,
  infant_survival_rate$life_expectancy,
  main='African Life Expectancy \n Infant Mortality Effect',
  xlab='Infant Mortality',
  ylab='Life Expectancy',
   col='red', 
   bg='blue', 
   pch = 21,
)
```



# Life expectancy as a function of population

```{r}
regression = lm(african_mortality$life_expectancy ~ african_mortality$population)
rsq <- function(x, y) summary(lm(african_mortality$life_expectancy ~ african_mortality$population))$r.squared
r_square = round(rsq(obs, mod), 3)

coeff = round(summary(regression)$coefficients[2],9)
y_int = round(summary(regression)$coefficients[1],3)
plot(
  african_mortality$population,
  african_mortality$life_expectancy,
  main='African Life Expectancy \n Population Effect',
  xlab='Population',
  ylab='Life Expectancy',
  col='pink', 
  bg='purple', 
  pch = 21,
)
```

# Missing years for infant mortality

```{r}
miss_inf_mort_rows = africadata %>%
  filter(is.na(infant_mortality))
head(miss_inf_mort_rows)
```

# Perform year group by to identify missing year

```{r}
miss_inf_mort_yrs = miss_inf_mort_rows %>%
  group_by(year) %>%
  count(infant_mortality)
miss_inf_mort_yrs
```

# Extract only year 2000 from data

```{r}
africadata2000 = filter(africadata, year == 2000)
africadata2000
```

# Structure of year 2000 data

```{r}
str(africadata2000)
```

# Summary of yer 2000 data

```{r}
summary(africadata2000)
```

# To create a filter from dataset

```{r}
african_mortality2000 = africadata2000 %>%
  select(population, life_expectancy)
head(african_mortality2000)
```

# To create another dataset

```{r}
infant_survival_rate2000 = africadata2000 %>%
  select(infant_mortality, life_expectancy)
head(african_mortality2000)
```

# infant mortality effect

```{r}
regression = lm(infant_survival_rate2000$life_expectancy ~ infant_survival_rate2000$infant_mortality)
rsq <- function(x, y) summary(lm(infant_survival_rate2000$life_expectancy ~ infant_survival_rate2000$infant_mortality))$r.squared
r_square = round(rsq(obs, mod), 3)
# summary(regression)$coefficients - keep to sanity check
coeff = round(summary(regression)$coefficients[2],3)
y_int = round(summary(regression)$coefficients[1],3)
plot(
  infant_survival_rate2000$infant_mortality,
  infant_survival_rate2000$life_expectancy,
  main='African Life Expectancy \n Infant Mortality Effect',
  xlab='Infant Mortality',
  ylab='Life Expectancy',
   col='green', 
   bg='violet', 
   pch = 21,
)
```

# Population effect

```{r}
regression = lm(african_mortality2000$life_expectancy ~ african_mortality2000$population)
rsq <- function(x, y) summary(lm(african_mortality2000$life_expectancy ~ african_mortality2000$population))$r.squared
r_square = round(rsq(obs, mod), 3)
# summary(regression)$coefficients - keep to sanity check
coeff = round(summary(regression)$coefficients[2],9)
y_int = round(summary(regression)$coefficients[1],3)
plot(
  african_mortality2000$population,
  african_mortality2000$life_expectancy,
  main='African Life Expectancy \n Population Effect',
  xlab='Population',
  ylab='Life Expectancy',
  col='violet', 
  bg='red', 
  pch = 21,
)
```

# Simple model fit

# Life expectancy to infant mortality

```{r}
fit1 = lm(life_expectancy ~ log(infant_mortality), data=infant_survival_rate2000)
summary(fit1)
```

The R-squared is 0.5411, this means that 54% of life expectancy can be explained by infant mortality

# Fit life expectancy to population

```{r}
fit2 = lm(life_expectancy ~ log(population), data=african_mortality2000)
summary(fit2)
```

The R-squared is 0.01044 which means that 1% of population can be explained by life expentancy

#Part 2
Amelia Tristan contributed to this exercise. Amelia used the mice_weight data set from dslabs.

```{r}
#open help page for mice_weights data and explore the data structure, class, and contents
help(mice_weights) #help page
str(mice_weights) #structure
summary(mice_weights) #contents
class(mice_weights) #class

mice_weights

#filtering out any null values. data is already mostly clean with just 8 null entries in the entire data set (4 each in two variables)
mw_clean <- mice_weights %>%  dplyr::filter(!(is.na(bone_density)), !(is.na(percent_fat)))


#checking distribution (boxplot) of percent_fat as a predictor of body_weight by sex.
mw_clean %>% ggplot(aes(percent_fat, body_weight)) + geom_boxplot() + facet_wrap(~sex)

#checking distribution of diet as a predictor of body_weight by sex
mw_clean %>% ggplot(aes(diet, body_weight)) + geom_boxplot() + facet_wrap(~sex)

#scatter of percent_fat as a predictor of body_weight by sex.
mw_clean %>% ggplot(aes(percent_fat, body_weight)) + geom_point() + facet_wrap(~sex)

#scatter of bone_density as a predictor of body_weight by sex.
mw_clean %>% ggplot(aes(bone_density, body_weight)) + geom_point() + facet_wrap(~sex)
```

I will be focusing on body weight as the dependent variable. The first boxplot explores the distribution of body weight by percent fat by each sex. Females have more outliers than males and lower average body weight. The second boxplot explores the distribution of body weight by diet dy sex. Again females have more outliers and lower average body weight than males. However, the HF diet produces higher body weights in both sexes than chow diet. The next scatter plot shows a positive relationship between percent fat and body weight. The last plot shows a loosely clustered positive relationship between bone density and body weight.I will continue fitting two models of body weight with percent fat and bone density as the predictor.

```{r}
#fitting two linear models for bodyweight by percent fat and bone density
mw_pf_bw_fit = lm(body_weight~percent_fat, data = mw_clean)
mw_bd_bw_fit = lm(body_weight~bone_density, data = mw_clean)

#summary of each model
summary(mw_pf_bw_fit)
summary(mw_bd_bw_fit)
```
The two models' predictors both have low significance for body weight. However, based on the r-squared values, the model with percent fat is a much better fit (0.43) than the bone density model (0.13).

